/* * ATM Example system - file EnvelopeAcceptor.java * * copyright (c) 2001 - Russell C. Bjork * */package edu.gordon.atm.physical;import com.google.common.eventbus.EventBus;import com.google.inject.Inject;import edu.gordon.atm.event.AcceptEnvelopeEvent;import edu.gordon.atm.physical.CustomerConsole.Cancelled;/** * Manager for the ATM's envelope acceptor. In a real ATM, this would manage a * physical device; in this edu.gordon.simulation, it uses classes in package * edu.gordon.simulation to simulate the device. */public class EnvelopeAcceptor {	/**	 * Log in which to record receiving an envelope	 */	private final Log log;	private final EventBus eventBus;	private boolean inserted;		/**	 * Constructor	 *	 * @param log	 *            the log in which to record receiving an envelope	 */	@Inject	public EnvelopeAcceptor(final Log log, final EventBus eventBus) {		this.log = log;		this.eventBus = eventBus;	}	/**	 * Accept an envelope from customer.	 */	public void acceptEnvelope(boolean inserted) {		this.inserted = inserted;		if (inserted)			log.logEnvelopeAccepted();	}		/**	 * Throw an error if the envelope is not inserted.	 * Reset the inserted state.	 * @throws Cancelled	 */	public void envelopeRequest() throws Cancelled {		eventBus.post(new AcceptEnvelopeEvent());		if(!inserted){			throw new CustomerConsole.Cancelled();		}		inserted = false;	}}